id: cssmods_css_modulate
label: CSS Modulate
category: '[cssmods]'

templates:
  imports: from gnuradio import cssmods
  make: cssmods.css_modulate(${sf}, ${bw}, ${fs}, ${cr}, ${preamble_len}, ${cfo})

parameters:
- id: sf
  label: Spreading Factor
  dtype: int
  default: 7
  options: [7, 8, 9, 10, 11, 12]
  option_labels: ['7', '8', '9', '10', '11', '12']
  
- id: bw
  label: Bandwidth (Hz)
  dtype: float
  default: 125000
  options: [125000, 250000, 500000]
  option_labels: ['125 kHz', '250 kHz', '500 kHz']
  
- id: fs
  label: Sampling Frequency (Hz)
  dtype: float
  default: 1000000
  
- id: cr
  label: Code Rate
  dtype: int
  default: 1
  options: [1, 2, 3, 4]
  option_labels: ['4/5', '4/6', '4/7', '4/8']
  
- id: preamble_len
  label: Preamble Length
  dtype: int
  default: 8
  
- id: cfo
  label: Carrier Frequency Offset (Hz)
  dtype: float
  default: 0.0

inputs:
- label: in
  domain: stream
  dtype: int

outputs:
- label: out
  domain: stream
  dtype: complex

file_format: 1

documentation: |
  # CSS Modulator Block
  
  This block implements CSS (Chirp Spread Spectrum) modulation with configurable parameters:
  
  - **Spreading Factor (sf)**: Determines the number of bits per symbol (7-12)
  - **Bandwidth (bw)**: Channel bandwidth (125 kHz, 250 kHz, or 500 kHz)
  - **Sampling Frequency (fs)**: Sample rate of the output signal
  - **Code Rate (cr)**: Error correction coding rate (1=4/5, 2=4/6, 3=4/7, 4=4/8)
  - **Preamble Length**: Number of preamble symbols
  - **CFO**: Carrier frequency offset compensation
  
  Input: Complex baseband signal
  Output: CSS modulated signal
