id: cssmods_css_frame_sync
label: CSS Frame Sync
category: '[cssmods]'

templates:
  imports: from gnuradio import cssmods
  make: cssmods.css_frame_sync(${sf}, ${bw}, ${zero_padding_ratio})

parameters:
- id: sf
  label: Spreading Factor
  dtype: int
  default: 7
  options: [7, 8, 9, 10, 11, 12]
  option_labels: ['7', '8', '9', '10', '11', '12']
  
- id: bw
  label: Bandwidth (Hz)
  dtype: float
  default: 125000
  options: [125000, 250000, 500000]
  option_labels: ['125 kHz', '250 kHz', '500 kHz']
  
- id: zero_padding_ratio
  label: Zero Padding Ratio
  dtype: int
  default: 1
  options: [1, 2]
  option_labels: ['1x', '2x']
inputs:
- label: in
  domain: stream
  dtype: complex
outputs:
- label: out
  domain: stream
  dtype: complex
file_format: 1
documentation: |
  # CSS Frame Synchronization Block
  
  This block implements CSS (Chirp Spread Spectrum) frame synchronization:
  
  - **Spreading Factor (sf)**: Must match the transmitted signal (7-12)
  - **Bandwidth (bw)**: Must match the transmitted signal (125 kHz, 250 kHz, or 500 kHz)
  - **Zero Padding Ratio**: FFT padding ratio (1x or 2x)
  
  Detects the LoRa preamble and sync word to find frame start. Adds a tag at the beginning of the payload.
  
  Input: Complex baseband CSS signal
  Output: Synchronized complex signal with payload tags
